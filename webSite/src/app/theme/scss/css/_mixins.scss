
//break points
@mixin breakpoint($point) {
    @if $point==xss {
        @media (max-width: 539px) {
            @content;
        }
    }

    @if $point==xs {
        @media (max-width: 767px) {
            @content;
        }
    }
    @else if $point==sm {
        @media (min-width: 768px) and (max-width: 1024px) {
            @content;
        }
    }
    @else if $point==md {
        @media (min-width: 1025px) and (max-width: 1399px) {
            @content;
        }
    }
    @else if $point==lg {
        @media (min-width: 1400px) {
            @content;
        }
    }
}

//vertical align
@mixin valign($position) {
    &:before {
        content: '';
        display: inline-block;
        height: 100%;
        vertical-align: $position;
        width: 1px;
        font-size: 0;
        
    }
}
//box-shadow
@mixin filter($val) {
    -webkit-filter: $val;
    -moz-filter: $val;
    -o-filter: $val;
    -ms-filter: $val;
    filter: $val;
}
//box-shadow
@mixin border-radius($val) {
    -webkit-border-radius: $val;
    -moz-border-radius: $val;
    -o-border-radius: $val;
    -ms-border-radius: $val;
    border-radius: $val;
}
//box-shadow
@mixin text-shadow($val) {
    -webkit-text-shadow: $val;
    -moz-text-shadow: $val;
    -o-text-shadow: $val;
    -ms-text-shadow: $val;
    text-shadow: $val;
}
//border
@mixin transform($val) {
    -webkit-transform: $val;
    -moz-transform: $val;
    -o-transform: $val;
    -ms-transform: $val;
    transform: $val;
}
//border-top
@mixin border-top($val) {
    -webkit-border-top: $val;
    -moz-border-top: $val;
    -ms-border-top: $val;
    -o-border-top: $val;
    border-top: $val;
}
//border-bottom
@mixin border-bottom($val) {
    -webkit-border-bottomp: $val;
    -moz-border-bottom: $val;
    -ms-border-bottom: $val;
    -o-border-bottom: $val;
    border-bottom: $val;
}
//border
@mixin border($val) {
    -webkit-border: $val;
    -moz-border: $val;
    -o-border: $val;
    -ms-border: $val;
    border: $val;
}
//border-color
@mixin border-color($val) {
    -webkit-border-color: $val;
    -moz-border-color: $val;
    -o-border-color: $val;
    -ms-border-color: $val;
    border-color: $val;
}
//transition
@mixin transition($val) {
    -webkit-transition: $val;
    -moz-transition: $val;
    -o-transition: $val;
    -ms-transition: $val;
    transition: $val;
}


@mixin arrow($width: 20px, $height: 20px, $direction: up, $color: red) {
    width: 0;
    height: 0;
    // Right
    @if $direction==right {
        border-top: $height/2 solid transparent;
        border-bottom: $height/2 solid transparent;
        border-left: $width solid $color;
    }
    // Left
    @if $direction==left {
        border-top: $height/2 solid transparent;
        border-bottom: $height/2 solid transparent;
        border-right: $width solid $color;
    }
    // Up
    @if $direction==up {
        border-left: $width/2 solid transparent;
        border-right: $width/2 solid transparent;
        border-bottom: $height solid $color;
    }
    // Down
    @if $direction==down {
        border-left: $width/2 solid transparent;
        border-right: $width/2 solid transparent;
        border-top: $height solid $color;
    }
}


